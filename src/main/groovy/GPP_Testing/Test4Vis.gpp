package GPP_Testing

import groovyParallelPatterns.DataDetails
import groovyParallelPatterns.LocalDetails
import groovyParallelPatterns.ResultDetails
import groovyParallelPatterns.functionals.workers.ThreePhaseWorker
import groovyParallelPatterns.terminals.*
import groovyJCSP.*
import TestDataDefs.*
import static org.junit.Assert.assertTrue

def er = new TestExtract()

def emitterDetails = new DataDetails(dName: TestData.getName() ,
    dInitMethod: TestData.totalInitialise,
    dInitData: [20],
    dCreateMethod: TestData.create)

def resultDetails = new ResultDetails(rName: TestResult.getName(),
    rInitMethod: TestResult.init,
    rCollectMethod:  TestResult.collector,
    rFinaliseMethod: TestResult.finalise,
    rFinaliseData: [er])

def tpwLocal = new LocalDetails(lName: TPWdata.getName(),
    lInitMethod: TPWdata.initMethod,
    lInitData: [2])


//@log 1 "./Test4-"

def emitter = new Emit(
    eDetails: emitterDetails,
    logPhaseName: "emit",
    logPropertyName: "instanceNumber"  )

def worker = new ThreePhaseWorker(
    lDetails: tpwLocal,
    inputMethod: TPWdata.inputMethod,
    workMethod: TPWdata.workMethod,
    outFunction: TPWdata.outFunction,
    logPhaseName: "work",
    inputLogPropertyName: "instanceNumber",
    outputLogPropertyName: "instanceNumber")

def collector = new Collect(
    rDetails: resultDetails,
    logPhaseName: "collect",
    logPropertyName: "instanceNumber")

println "4: $er"

assertTrue (er.finalSum == 840)
assertTrue (er.dataSetCount == 2)
assertTrue (er.finalInstance == 2)
