package GPP_Testing

import groovy_parallel_patterns.DataDetails
import groovy_parallel_patterns.ResultDetails
import groovy_parallel_patterns.connectors.reducers.ListMergeOne
import groovy_parallel_patterns.connectors.reducers.ListSeqOne
import groovy_parallel_patterns.connectors.spreaders.OneParCastList
import groovy_parallel_patterns.functionals.groups.ListGroupList
import groovy_parallel_patterns.terminals.Collect
import groovy_parallel_patterns.terminals.Emit
import TestDataDefs.TestData
import TestDataDefs.TestExtract
import TestDataDefs.TestResult
import static org.junit.Assert.assertTrue

def er = new TestExtract()

def emitterDetails = new DataDetails(dName: TestData.getName() ,
    dInitMethod: TestData.totalInitialise,
    dInitData: [20],
    dCreateMethod: TestData.create)

def resultDetails = new ResultDetails(rName: TestResult.getName(),
    rInitMethod: TestResult.init,
    rCollectMethod:  TestResult.collector,
    rFinaliseMethod: TestResult.finalise,
    rFinaliseData: [er])

def emitter = new Emit(
    eDetails: emitterDetails )

def outFan = new OneParCastList( )

def lgl = new ListGroupList(
    workers: 4,
    function: TestData.nullFunc
)

def inFan = new ListSeqOne()

def collector = new Collect(
    rDetails: resultDetails)

println "16: $er"

assertTrue (er.finalSum == 840)
assertTrue (er.dataSetCount == 80)
assertTrue (er.finalInstance == 20)
assertTrue (er.maxClone == 80)
