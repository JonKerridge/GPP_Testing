package GPP_Testing

import groovyParallelPatterns.DataDetails
import groovyParallelPatterns.ResultDetails
import groovyParallelPatterns.functionals.workers.Worker
import groovyParallelPatterns.terminals.Collect
import groovyParallelPatterns.terminals.Emit
import TestDataDefs.TestData
import TestDataDefs.TestExtract
import TestDataDefs.TestResult
import groovyJCSP.PAR

import static org.junit.Assert.assertTrue
import static org.junit.Assert.assertTrue
import static org.junit.Assert.assertTrue

def er = new TestExtract()

def emitterDetails = new DataDetails(dName: TestData.getName() ,
    dInitMethod: TestData.totalInitialise,
    dInitData: [20],
    dCreateMethod: TestData.create)

def resultDetails = new ResultDetails(rName: TestResult.getName(),
    rInitMethod: TestResult.init,
    rCollectMethod:  TestResult.collector,
    rFinaliseMethod: TestResult.finalise,
    rFinaliseData: [er])

//@log 1 "./Test1-"

def emitter = new Emit(
    eDetails: emitterDetails ,
    logPhaseName: "emit",
    logPropertyName: "instanceNumber")

def worker = new Worker(
    function: TestData.nullFunc,
    logPhaseName: "work",
    logPropertyName: "instanceNumber")

def collector = new Collect(
    rDetails: resultDetails,
    logPhaseName: "collect",
    logPropertyName: "instanceNumber")


println "1: $er"

assertTrue (er.finalSum == 210)
assertTrue (er.dataSetCount == 20)
assertTrue (er.finalInstance == 20)