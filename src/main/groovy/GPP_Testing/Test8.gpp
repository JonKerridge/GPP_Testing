package GPP_Testing

import groovyParallelPatterns.DataDetails
import groovyParallelPatterns.ResultDetails
import groovyParallelPatterns.connectors.reducers.ListFanOne
import groovyParallelPatterns.connectors.spreaders.OneFanList
import groovyParallelPatterns.functionals.groups.ListGroupList
import groovyParallelPatterns.terminals.*
import static org.junit.Assert.assertTrue
import TestDataDefs.*

def er = new TestExtract()

def emitterDetails = new DataDetails(dName: TestData.getName() ,
    dInitMethod: TestData.totalInitialise,
    dInitData: [20],
    dCreateMethod: TestData.create)

def resultDetails = new ResultDetails(rName: TestResult.getName(),
    rInitMethod: TestResult.init,
    rCollectMethod:  TestResult.collector,
    rFinaliseMethod: TestResult.finalise,
    rFinaliseData: [er])

def emitter = new Emit(
    eDetails: emitterDetails )

def outFan = new OneFanList ()

def lgl = new ListGroupList(
    workers: 4,
    function: TestData.nullFunc
)

def inFan = new ListFanOne( )

def collector = new Collect(
    rDetails: resultDetails)

println "8: $er"

assertTrue (er.finalSum == 210)
assertTrue (er.dataSetCount == 20)
assertTrue (er.finalInstance == 20)
assertTrue (er.maxClone == 0)
