package GPP_Testing

import groovy_parallel_patterns.DataDetails
import groovy_parallel_patterns.LocalDetails
import groovy_parallel_patterns.ResultDetails
import groovy_parallel_patterns.functionals.transformers.CombineNto1
import groovy_parallel_patterns.functionals.workers.Worker
import groovy_parallel_patterns.terminals.*
import static org.junit.Assert.assertTrue
import TestDataDefs.*


def er = new TestExtract()

def emitterDetails = new DataDetails(dName: TestData.getName() ,
    dInitMethod: TestData.totalInitialise,
    dInitData: [20],
    dCreateMethod: TestData.create)

def resultDetails = new ResultDetails(rName: TestResult.getName(),
    rInitMethod: TestResult.init,
    rCollectMethod:  TestResult.collector,
    rFinaliseMethod: TestResult.finalise,
    rFinaliseData: [er])

def localData = new LocalDetails( lName: TestData.getName(),
    lInitMethod: TestData.partialInitialise)

def outData = new LocalDetails( lName: TestData.getName(),
    lInitMethod: TestData.partialInitialise,
    lFinaliseMethod: TestData.finaliseMethod)

def emitter = new Emit(
    eDetails: emitterDetails )

def combiner = new CombineNto1(
    localDetails: localData,
    outDetails: outData,
    combineMethod: CombineData.combineMethod)

def worker = new Worker(
    function: TestData.nullFunc)

def collector = new Collect(
    rDetails: resultDetails)



println "2: $er"

assertTrue (er.finalSum == 210)
assertTrue (er.dataSetCount == 1)
assertTrue (er.finalInstance == 20)